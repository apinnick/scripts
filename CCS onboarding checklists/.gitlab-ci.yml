build_a:
  stage: build
  tags:
    - docker
  image:
    name: ruby:2.6
  script:
    - gem install bundler
    - gem install asciidoctor
    - build_tools/build_html.sh
    - ls -la html_files/
  artifacts:
    paths:
      - html_files
  only:
    - main

build_b:
  stage: build
  needs: [build_a]
  tags:
    - docker
  image:
    name: pandoc/latex
    entrypoint: ["/bin/sh", "-c"]
  script:
    - cd html_files
    - find . -name "*.html*" | while read i; do pandoc -f html -t odt "$i" -o "${i%.*}.odt"; done
    - find . -name '*.odt' -exec mv {} ../odt_files \;
    - ls -la ../odt_files
  artifacts:
    paths:
      - odt_files
  only:
    - main

pages:
  stage: deploy
  tags:
    - docker
  image:
    name: ruby:2.6
  script:
    - gem install bundler
    - bundle config set --local path 'vendor'
    - bundle install
    - bundle update
    - rm -rf public
    - build_tools/build_index.sh
    - bundle exec jekyll build -d public
  artifacts:
    paths:
      - public
  only:
    - main